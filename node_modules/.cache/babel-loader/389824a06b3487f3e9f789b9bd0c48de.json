{"ast":null,"code":"var _jsxFileName = \"/Users/lukejaparidze/mapboxAndReact/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nmapboxgl.accessToken = 'pk.eyJ1IjoibHVrZWpheSIsImEiOiJjazVoM3JwaTMwZXJiM2t0ZDZyZnF5bnN3In0.NQ71qNFEXZZzlOhYyWlIPg';\nconst options = [{\n  name: 'Base Map',\n  url: 'mapbox://styles/mapbox/streets-v11'\n}, {\n  name: 'Satellite',\n  url: 'mapbox://styles/mapbox/satellite-v9'\n}];\n\nclass Application extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -82.56582048445668,\n      lat: 35.61540402873807,\n      zoom: 12,\n      active: options[0]\n    };\n  }\n\n  componentDidMount() {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n    var geolocate = new mapboxgl.GeolocateControl();\n    map.addControl(geolocate);\n    map.on('load', function () {\n      geolocate.trigger();\n    });\n    var inputs = layerList.getElementsByTagName('input');\n\n    function switchLayer(layer) {\n      var layerId = layer.target.id;\n      map.setStyle('mapbox://styles/mapbox/' + layerId);\n    }\n\n    for (var i = 0; i < inputs.length; i++) {\n      inputs[i].onclick = switchLayer;\n    }\n\n    map.on('move', () => {\n      this.setState({\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n  }\n\n  render() {\n    const renderOptions = (option, i) => {\n      /*return (\n        <label key={i} className=\"toggle-container\">\n          <input onChange={() => { this.switchLayer(); this.setState({ active: options[i]}) } } checked={option.url=== this.state.active.url} name=\"toggle\" type=\"radio\" />\n          <div className=\"toggle txt-s py3 toggle--active-white\">{option.name}</div>\n        </label>\n      );*/\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      className: \"mapContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), \"/*\", React.createElement(\"div\", {\n      className: \"toggle-group absolute top left ml12 mt12 border border--2 border--white bg-white shadow-darken10 z1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"//\", options.map(renderOptions), \"//\"), \"*/\");\n  }\n\n}\n\nReactDOM.render(React.createElement(Application, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82\n  },\n  __self: this\n}), document.getElementById('app'));","map":{"version":3,"sources":["/Users/lukejaparidze/mapboxAndReact/src/index.js"],"names":["React","ReactDOM","mapboxgl","accessToken","options","name","url","Application","Component","constructor","props","state","lng","lat","zoom","active","componentDidMount","map","Map","container","mapContainer","style","center","geolocate","GeolocateControl","addControl","on","trigger","inputs","layerList","getElementsByTagName","switchLayer","layer","layerId","target","id","setStyle","i","length","onclick","setState","getCenter","toFixed","getZoom","render","renderOptions","option","el","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibHVrZWpheSIsImEiOiJjazVoM3JwaTMwZXJiM2t0ZDZyZnF5bnN3In0.NQ71qNFEXZZzlOhYyWlIPg'\n\nconst options = [{\n  name: 'Base Map',\n  url: 'mapbox://styles/mapbox/streets-v11'\n}, {\n  name: 'Satellite',\n  url: 'mapbox://styles/mapbox/satellite-v9'\n}]\n\n\n\nclass Application extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      lng: -82.56582048445668,\n      lat: 35.61540402873807,\n      zoom: 12,\n      active: options[0]\n    };\n  }\n  componentDidMount() {\n  const map = new mapboxgl.Map({\n  container: this.mapContainer,\n  style: 'mapbox://styles/mapbox/streets-v11',\n  center: [this.state.lng, this.state.lat],\n  zoom: this.state.zoom\n  });\n\n  var geolocate = new mapboxgl.GeolocateControl();\n  map.addControl(geolocate);\n\n  map.on('load', function() {\n    geolocate.trigger();\n  });\nvar inputs = layerList.getElementsByTagName('input');\n  function switchLayer(layer) {\n  var layerId = layer.target.id;\n  map.setStyle('mapbox://styles/mapbox/' + layerId);\n  }\n\n  for (var i = 0; i < inputs.length; i++) {\n  inputs[i].onclick = switchLayer;\n  }\n\n  map.on('move', () => {\n  this.setState({\n  lng: map.getCenter().lng.toFixed(4),\n  lat: map.getCenter().lat.toFixed(4),\n  zoom: map.getZoom().toFixed(2)\n  });\n  });\n\n}\nrender() {\n\n  const renderOptions = (option, i) => {\n        /*return (\n          <label key={i} className=\"toggle-container\">\n            <input onChange={() => { this.switchLayer(); this.setState({ active: options[i]}) } } checked={option.url=== this.state.active.url} name=\"toggle\" type=\"radio\" />\n            <div className=\"toggle txt-s py3 toggle--active-white\">{option.name}</div>\n          </label>\n        );*/\n      }\n\nreturn (\n<div>\n<div ref={el => this.mapContainer = el} className=\"mapContainer\" />\n/*<div className=\"toggle-group absolute top left ml12 mt12 border border--2 border--white bg-white shadow-darken10 z1\">\n  //{options.map(renderOptions)}\n//</div>*/\n</div>\n)\n}\n}\n\nReactDOM.render(<Application />, document.getElementById('app'));\n"]},"metadata":{},"sourceType":"module"}